// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  status     Boolean
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("customers")
}

model Card {
  id                    String       @id @default(auto()) @map("_id") @db.ObjectId
  card_name             String
  issuer                String
  annual_fee            Int
  card_brand            String
  category              String
  ranking_points        Int
  ranking_benefits      Int
  ranking_annuity       Int
  ranking_miles_program Int
  virtual_wallets       String[]
  add_cards_amount      Float
  add_cards_charge      Float
  req_min_income        Float
  req_min_investment    Float
  rewards               Reward[]
  MileProgram           MileProgram?
  lounges               Lounge[]
  zerofees              ZeroFee[]
  created_at            DateTime?    @default(now())
  updated_at            DateTime?    @default(now())

  @@map("cards")
}

model Reward {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  expenses          String
  points_per_dollar Float
  points_per_real   Float
  rules             String
  points_limit      Int
  expiration        Boolean
  cardId            String  @unique @db.ObjectId
  Card              Card    @relation(fields: [cardId], references: [id])

  @@map("rewards")
}

model MileProgram {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  program_name        String
  transfer_program    String[]
  airlines            String[]
  hotels              String[]
  points_to_miles     Int
  points_min_transfer Int
  stores              String
  pay_bills           Boolean
  Card                Card     @relation(fields: [CardId], references: [id])
  CardId              String   @unique @db.ObjectId

  @@map("mileprogram")
}

model Lounge {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  lounge_name  String
  br_airport   String[]
  int_airport  String[]
  access_limit Int
  conditions   String
  notes        String
  Card         Card     @relation(fields: [CardId], references: [id])
  CardId       String   @unique @db.ObjectId

  @@map("lounges")
}

model ZeroFee {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  expenses     String
  investments  String
  fee_discount Int
  notes        String
  Card         Card   @relation(fields: [CardId], references: [id])
  CardId       String @unique @db.ObjectId

  @@map("zerofees")
}

{ id, created_at, updated_at, card_name, annual_fee, card_brand, category, card_limit,
      ranking_points, ranking_benefits, ranking_annuity, ranking_miles_program, virtual_wallets,
      add_cards_amount, add_cards_charge, card_material, contactless, get_conditions, spread_on,
      cashback, obs_add_cards, obs_cashback, account_holder, international_card, card_modality,
      vip_lounge_app, spread_rate, iof_rate, ranking_vip_lounges, src_card_picture, segment,
      issuer_name, points_expire, obs_system_points, virtual_cards, points_accelerator, brandId, issuerId }